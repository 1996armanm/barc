#!/bin/bash

env_var() {

    export ROS_MASTER_URI=http://${1}.local:11311/
    export ROS_IP=${2}.local
    export ROS_HOSTNAME=${2}.local
    #exit 0

}

source=1
if [ "${BASH_SOURCE[0]}" != "${0}" ]; then
    source=0    #source is used to call script
fi

source_exit() {
    if [ ${source} -eq 1 ]; then
        exit ${1}
    fi
}

source_warn() {
    
     if [ ${source} -eq 1 ] ; then
        echo "source was not used when calling the script. Nothing in the current terminal has changed."
     fi

}

if [ $# -eq 2 ]; then

case "$1" in
    "-s" )
     source_warn
     env_var ${2} $(hostname)
#    export ROS_MASTER_URI=http://${2}.local:11311
#    export ROS_IP=$(hostname).local
#    export ROS_HOSTNAME=$(hostname).local
    ;;
    
    "-l" )
    ssh -t ${2}.local "export ROS_MASTER_URI=http://$(hostname).local:11311; export ROS_IP=${2}.local; export ROS_HOSTNAME=${2}.local;
    
        roslaunch network_testing slavecar.launch car:=${2}; bash -i -c echo hi"
    ;;

    * )
    
    ssh -t ${2}.local "export ROS_MASTER_URI=http://${1}.local:11311; export ROS_IP=${2}.local; export ROS_HOSTNAME=${2}.local; bash"
    ;;
esac

elif [ $# -eq 1 ]; then

case "$1" in
    "-h" )
    echo "
    Main syntax: sshcar [MASTERCAR] [SLAVECAR]

        Write out the full hostname for MASTERCAR and SLAVECAR. sshcar is only useful when running from the Master Car.

        Do not close the terminals after sshcar, or else the environment variables will be reset to the default.

    Other syntax:

    sshcar [SLAVECAR]

        Shorthand of the main syntax. Assumes that the master car is the current host, and that the host name of the master is resolvable. 
        
    source sshcar -s
        
        This is used to set the ROS environment variables for the current machine, assuming that it is the master. It performs the same task but without the ssh.

        It is necessary to use source in this case. Without source, the script will run in a child process and will not change any enivornment variables in the current terminal.

    source sshcar -s [MASTERCAR]

        Performs the same task as "source sshcar -s" but with a designated master machine.

    sshcar -l [SLAVECAR]

        In addition to setting the environment variables and ssh'ing into the car, it will initiate the car's sensors in the appropriate namespace.
    
    sshcar -h        
        
        Pulls up this message for reference.
    "
    ;;
    "-s" )
    
     if [ ${source} -eq 1 ] ; then
        echo "source was not used when calling the script. Nothing in the current terminal has changed."
     fi
     env_var $(hostname) $(hostname)
#    export ROS_MASTER_URI=http://$(hostname).local:11311
#    export ROS_IP=$(hostname).local
#    export ROS_HOSTNAME=$(hostname).local
    ;;
   
    * )

    ssh -t ${1}.local "export ROS_MASTER_URI=http://$(hostname).local:11311; export ROS_IP=${1}.local; export ROS_HOSTNAME=${1}.local; bash"
    ;;
esac

else
    echo "Invalid syntax. Type 'sshcar -h' for help." >&2
    source_exit 1
    
fi


source_exit 0
