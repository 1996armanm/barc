<launch>
    <machine name="odroid" address="10.0.0.1" user="odroid" timeout="20.0" env-loader="$HOME/barc/scripts/remote-machines/env_loader_odroid.sh"/>
    <machine name="pc" address="10.0.0.14" timeout="20.0" />

    <!-- SYSTEM MODEL -->
    <!-- vehicle parameters -->
    <param name="m" type="double" value="1.98" />
    <param name="I_z" type="double" value="0.24" />
    <param name="L_a" type="double" value="0.125" />
    <param name="L_b" type="double" value="0.125" />
    <!-- control parameters -->
    <param name="input_gain" type="double" value="0.3" />


   	<!-- IMU -->
    <node machine="odroid" pkg="myahrs_driver" type="myahrs_driver" name="myahrs_driver">
        <param name="port" value="/dev/ttyACM1" />
        <param name="baud_rate" value="115200" />
    </node>

   	<!-- LiDAR 
    <node machine="odroid" name="rplidarNode"    pkg="rplidar_ros"  type="rplidarNode" >
	  <param name="serial_port"         type="string" value="/dev/ttyUSB1"/>  
	  <param name="serial_baudrate"     type="int"    value="115200"/>
	  <param name="frame_id"            type="string" value="laser"/>
	  <param name="inverted"            type="bool"   value="false"/>
	  <param name="angle_compensate"    type="bool"   value="true"/>
  </node>
  -->

   	<!-- GPS -->
  	<node machine="odroid" pkg="marvelmind_nav" type="hedge_rcv_bin" name="hedge_pos" >
  		<param name="port" value="dev/ttyACM0" />
  	</node>
    

   	<!-- ARDUINO -->
	<node machine="odroid" pkg="rosserial_python" type="serial_node.py" name="arduino_node" >
		<param name="port" value="/dev/ttyUSB0" />
	</node>

  
  <!-- OBSERVER-->
    <node machine="pc" pkg="barc" type="state_estimation_KinBkMdl_CT.py" name="state_estimation" output="screen">
        <!-- v_x estimation sample time-->
        <param name="dt_v_enc" type="double" value="0.2" />

        <!-- ekf properties -->
        <param name="q_std" type="double" value="0.1" />
        <param name="r_std" type="double" value="0.1" />
    </node>

   	<!-- Controller 
  	<node machine="pc" pkg="barc" type="NNMPC_controller.jl" name="NN_MPC" output="screen" >
  	</node>
    -->
    

    <!-- LOW LEVEL CONTROLLER -->
    <node machine="pc" pkg="barc" type="controller_low_level_2.py" name="low_level_controller" />

    <!-- send command -->
    <node machine="pc" pkg="barc" type="send_command.py" name="send_command" />
    

  </launch>
