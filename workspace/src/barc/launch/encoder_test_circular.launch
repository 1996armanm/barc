 <launch>
    <!-- Licensing Information: You are free to use or extend these projects for
      -  for education or research purposes provided that (1) you retain this notice
      -  and (2) you provide clear attribution to UC Berkeley, including a link 
      -  to http://barc-project.com
      -
      - Authors: J. Noonan and Jon Gonzales
      - Emails:  jpnoonan@berkeley.edu, jon.gonzales@berkeley.edu
    -->


    <!-- SYSTEM MODEL -->
    <!-- vehicle parameters -->
    <param name="m" type="double" value="1.98" />
    <param name="I_z" type="double" value="0.24" />
    <param name="L_a" type="double" value="0.125" />
    <param name="L_b" type="double" value="0.125" />
    <!-- control parameters -->
    <param name="input_gain" type="double" value="0.3" />

    <!-- IMU -->
    <node pkg="myahrs_driver" type="myahrs_driver" name="myahrs_driver">
        <param name="port" value="/dev/ttyACM1" />
        <param name="baud_rate" value="115200" />
    </node>

    <!-- ARDUINO -->
    <!--  * encoders and ultrasound sensors -->
    <node pkg="rosserial_python" type="serial_node.py" name="arduino_node" >
        <param name="port" value="/dev/ttyUSB0" />
    </node>

    <!-- LOW LEVEL CONTROLLER -->
    <node pkg="barc" type="controller_low_level.py" name="low_level_controller" output="screen"/>

	<!-- HIGH LEVEL CONTROLLER -->
	<node pkg="barc" type="controller_circular.py" name="controller" output="screen">
         <!-- PROPERTIES -->
        <param name="FxR_target" type="double" value="3" />
        <param name="d_f_target" type="double" value="16" />
        <param name="t_0" type="int" value="1" />
		<param name="t_f" type="int" value="21" />
		
        <!-- PID for straight test using imu gyro -->
        <param name="p" type="double" value="0.5" />
		<param name="i" type="double" value="0" />
		<param name="d" type="double" value="0" />

		<param name="rate" type="int" value="50" />
   </node>

   	<!-- GPS -->
  	<node pkg="marvelmind_nav" type="hedge_rcv_bin" name="hedge_pos" >
  		<param name="port" value="/dev/ttyACM0" />
  	</node>

    <!-- Node to get GPS and encoder readings at regular intervals -->
    <node pkg="barc" type="encoder_gps_velocity_broadcast.py" name="enc_test_node" >
        <param name="dt_v_enc" type="double" value="0.2" />
    </node>

    <!-- Record the experiment data -->
    <node pkg="rosbag" type="record" name="rosbag_record" args=" --all" />
</launch>
